---
import BaseLayout from "../layouts/BaseLayout.astro";

const photos = [
  {
    id: 1,
    url: "https://via.placeholder.com/600x800/2563eb/ffffff?text=Photo+1",
    alt: "Beautiful landscape",
    title: "Mountain Adventure",
    caption: "Captured during a hiking trip in the mountains",
    category: "Nature",
  },
  {
    id: 2,
    url: "https://via.placeholder.com/600x400/7c3aed/ffffff?text=Photo+2",
    alt: "City architecture",
    title: "Urban Exploration",
    caption: "Modern architecture in the city center",
    category: "Urban",
  },
  {
    id: 3,
    url: "https://via.placeholder.com/600x600/f59e0b/ffffff?text=Photo+3",
    alt: "Sunset view",
    title: "Golden Hour",
    caption: "Perfect sunset by the beach",
    category: "Nature",
  },
  {
    id: 4,
    url: "https://via.placeholder.com/600x800/10b981/ffffff?text=Photo+4",
    alt: "Forest path",
    title: "Into the Woods",
    caption: "A peaceful walk through the forest",
    category: "Nature",
  },
  {
    id: 5,
    url: "https://via.placeholder.com/600x400/ec4899/ffffff?text=Photo+5",
    alt: "Coffee and code",
    title: "Developer Life",
    caption: "My daily setup for coding sessions",
    category: "Lifestyle",
  },
  {
    id: 6,
    url: "https://via.placeholder.com/600x600/06b6d4/ffffff?text=Photo+6",
    alt: "Night sky",
    title: "Stargazing",
    caption: "Stars above the desert",
    category: "Nature",
  },
];

const categories = [...new Set(photos.map((p) => p.category))];
---

<BaseLayout
  title="Gallery"
  description="A collection of moments and memories I want to share with the world."
>
  <!-- Gallery Hero -->
  <section class="gallery-hero section">
    <div class="container">
      <h1 class="fade-in">Gallery</h1>
      <p class="lead fade-in">
        Moments and memories I want to share with the world.
      </p>
    </div>
  </section>

  <!-- Category Filter -->
  {
    categories.length > 1 && (
      <section class="filter-section">
        <div class="container">
          <div class="filter-buttons">
            <button class="filter-btn active" data-category="all">
              All
            </button>
            {categories.map((category) => (
              <button class="filter-btn" data-category={category.toLowerCase()}>
                {category}
              </button>
            ))}
          </div>
        </div>
      </section>
    )
  }

  <!-- Photo Gallery -->
  <section class="gallery-section section">
    <div class="container">
      <div class="gallery-grid">
        {
          photos.map((photo) => (
            <div
              class="photo-item"
              data-category={photo.category.toLowerCase()}
            >
              <div class="photo-card">
                <img src={photo.url} alt={photo.alt} loading="lazy" />
                <div class="photo-overlay">
                  <div class="photo-info">
                    <h3 class="photo-title">{photo.title}</h3>
                    <p class="photo-caption">{photo.caption}</p>
                    <span class="photo-category">{photo.category}</span>
                  </div>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>
</BaseLayout>

<style>
  /* Gallery Hero */
  .gallery-hero {
    text-align: center;
    padding: var(--spacing-2xl) 0 var(--spacing-md);
  }

  .gallery-hero h1 {
    font-size: clamp(2.5rem, 5vw, 4rem);
    margin-bottom: var(--spacing-md);
  }

  .lead {
    font-size: 1.25rem;
    color: var(--color-text-light);
    max-width: 700px;
    margin: 0 auto;
  }

  /* Filter Section */
  .filter-section {
    padding: var(--spacing-lg) 0;
    background-color: var(--color-surface);
  }

  .filter-buttons {
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    gap: var(--spacing-sm);
  }

  .filter-btn {
    padding: var(--spacing-xs) var(--spacing-lg);
    background-color: var(--color-background);
    color: var(--color-text);
    border: 2px solid var(--color-border);
    border-radius: var(--border-radius);
    font-size: 0.9375rem;
    font-weight: 600;
    cursor: pointer;
    transition: all var(--transition-fast);
  }

  .filter-btn:hover,
  .filter-btn.active {
    background-color: var(--color-primary);
    color: white;
    border-color: var(--color-primary);
  }

  /* Gallery Grid - Masonry Layout */
  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: var(--spacing-md);
    grid-auto-flow: dense;
  }

  .photo-item {
    transition: opacity var(--transition-normal);
  }

  .photo-item.hidden {
    display: none;
  }

  .photo-card {
    position: relative;
    overflow: hidden;
    border-radius: var(--border-radius);
    box-shadow: var(--shadow-md);
    transition: transform var(--transition-normal);
    cursor: pointer;
  }

  .photo-card:hover {
    transform: translateY(-4px);
    box-shadow: var(--shadow-lg);
  }

  .photo-card img {
    width: 100%;
    height: auto;
    display: block;
    transition: transform var(--transition-normal);
  }

  .photo-card:hover img {
    transform: scale(1.05);
  }

  .photo-overlay {
    position: absolute;
    inset: 0;
    background: linear-gradient(to top, rgba(0, 0, 0, 0.9), transparent);
    display: flex;
    align-items: flex-end;
    opacity: 0;
    transition: opacity var(--transition-normal);
  }

  .photo-card:hover .photo-overlay {
    opacity: 1;
  }

  .photo-info {
    padding: var(--spacing-lg);
    color: white;
    width: 100%;
  }

  .photo-title {
    font-size: 1.25rem;
    font-weight: 700;
    margin-bottom: var(--spacing-xs);
    color: white;
  }

  .photo-caption {
    font-size: 0.9375rem;
    margin-bottom: var(--spacing-xs);
    color: rgba(255, 255, 255, 0.9);
  }

  .photo-category {
    display: inline-block;
    padding: 0.25rem 0.625rem;
    background-color: var(--color-primary);
    border-radius: calc(var(--border-radius) / 2);
    font-size: 0.8125rem;
    font-weight: 600;
  }

  @media (max-width: 768px) {
    .gallery-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<script>
  // Category filtering
  document.addEventListener("DOMContentLoaded", () => {
    const filterButtons = document.querySelectorAll(".filter-btn");
    const photoItems = document.querySelectorAll(".photo-item");

    filterButtons.forEach((btn) => {
      btn.addEventListener("click", () => {
        const category = btn.getAttribute("data-category");

        // Update active button
        filterButtons.forEach((b) => b.classList.remove("active"));
        btn.classList.add("active");

        // Filter photos
        photoItems.forEach((item) => {
          const itemCategory = item.getAttribute("data-category");
          if (category === "all" || itemCategory === category) {
            item.classList.remove("hidden");
          } else {
            item.classList.add("hidden");
          }
        });
      });
    });
  });
</script>
