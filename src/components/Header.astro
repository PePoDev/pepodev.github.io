---
// Header component with navigation
const currentPath = Astro.url.pathname;
---

<header class="header">
  <nav class="nav container">
    <a href="/" class="logo">
      <span class="logo-text">Portfolio</span>
    </a>

    <button
      class="mobile-menu-toggle"
      aria-label="Toggle menu"
      id="menu-toggle"
    >
      <span class="hamburger"></span>
    </button>

    <ul class="nav-links" id="nav-menu">
      <li>
        <a href="/" class={currentPath === "/" ? "active" : ""}> Home </a>
      </li>
      <li>
        <a href="/about" class={currentPath === "/about" ? "active" : ""}>
          About
        </a>
      </li>
      <li>
        <a href="/blog" class={currentPath.startsWith("/blog") ? "active" : ""}>
          Blog
        </a>
      </li>
      <li>
        <a href="/projects" class={currentPath === "/projects" ? "active" : ""}>
          Projects
        </a>
      </li>
      <li>
        <a href="/contact" class={currentPath === "/contact" ? "active" : ""}>
          Contact
        </a>
      </li>
    </ul>
  </nav>
</header>

<style>
  .header {
    position: sticky;
    top: 0;
    z-index: 1000;
    background-color: var(--color-background);
    border-bottom: 1px solid var(--color-border);
    box-shadow: var(--shadow-sm);
  }

  .nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-sm) var(--spacing-md);
    min-height: 70px;
  }

  .logo {
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--color-primary);
    transition: color var(--transition-fast);
  }

  .logo:hover {
    color: var(--color-secondary);
  }

  .logo-text {
    background: linear-gradient(
      135deg,
      var(--color-primary),
      var(--color-secondary)
    );
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .mobile-menu-toggle {
    display: none;
    flex-direction: column;
    justify-content: space-around;
    width: 30px;
    height: 25px;
    background: transparent;
    border: none;
    cursor: pointer;
    padding: 0;
    z-index: 1001;
  }

  .hamburger {
    width: 100%;
    height: 3px;
    background-color: var(--color-text);
    border-radius: 10px;
    transition: all var(--transition-fast);
    position: relative;
  }

  .hamburger::before,
  .hamburger::after {
    content: "";
    position: absolute;
    width: 100%;
    height: 3px;
    background-color: var(--color-text);
    border-radius: 10px;
    transition: all var(--transition-fast);
  }

  .hamburger::before {
    top: -8px;
  }

  .hamburger::after {
    bottom: -8px;
  }

  .nav-links {
    display: flex;
    list-style: none;
    gap: var(--spacing-lg);
    margin: 0;
    padding: 0;
  }

  .nav-links a {
    color: var(--color-text);
    font-weight: 500;
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: var(--border-radius);
    transition: all var(--transition-fast);
    position: relative;
  }

  .nav-links a:hover {
    color: var(--color-primary);
    background-color: var(--color-surface);
  }

  .nav-links a.active {
    color: var(--color-primary);
    font-weight: 600;
  }

  .nav-links a.active::after {
    content: "";
    position: absolute;
    bottom: -2px;
    left: 50%;
    transform: translateX(-50%);
    width: 60%;
    height: 2px;
    background-color: var(--color-primary);
    border-radius: 2px;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .mobile-menu-toggle {
      display: flex;
    }

    .nav-links {
      position: fixed;
      top: 70px;
      right: -100%;
      flex-direction: column;
      background-color: var(--color-background);
      width: 100%;
      max-width: 300px;
      padding: var(--spacing-lg);
      box-shadow: var(--shadow-lg);
      transition: right var(--transition-normal);
      border-left: 1px solid var(--color-border);
      height: calc(100vh - 70px);
    }

    .nav-links.active {
      right: 0;
    }

    .nav-links a {
      width: 100%;
      padding: var(--spacing-sm);
    }
  }
</style>

<script>
  // Mobile menu toggle functionality
  document.addEventListener("DOMContentLoaded", () => {
    const menuToggle = document.getElementById("menu-toggle");
    const navMenu = document.getElementById("nav-menu");

    if (menuToggle && navMenu) {
      menuToggle.addEventListener("click", () => {
        navMenu.classList.toggle("active");
      });

      // Close menu when clicking outside
      document.addEventListener("click", (e) => {
        if (
          !menuToggle.contains(e.target as Node) &&
          !navMenu.contains(e.target as Node)
        ) {
          navMenu.classList.remove("active");
        }
      });

      // Close menu when clicking on a link
      navMenu.querySelectorAll("a").forEach((link) => {
        link.addEventListener("click", () => {
          navMenu.classList.remove("active");
        });
      });
    }
  });
</script>
